
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Younouss bor√©
 */
public class Acceuil extends javax.swing.JFrame {

    /**
     * Creates new form Acceuil
     */
    public Acceuil() {
        initComponents();
        Remplire_tableau();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        acceuil_btn_deconnexion = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Contact_zone = new javax.swing.JPanel();
        contact_btn_modifier = new javax.swing.JButton();
        contact_btn_supprimer = new javax.swing.JButton();
        contact_btn_ajouter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        contact_id_field = new javax.swing.JTextField();
        contact_tel_field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        contact_email_field = new javax.swing.JTextField();
        contact_adresse_field = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contact_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        contact_id_rechercher_spinner = new javax.swing.JSpinner();
        contact_btn_rechercher = new javax.swing.JButton();
        Client_zone = new javax.swing.JPanel();
        client_btn_modifier = new javax.swing.JButton();
        client_btn_supprimer = new javax.swing.JButton();
        client_btn_ajouter = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        client_id_field = new javax.swing.JTextField();
        client_nom_field = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        client_prenom_field = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableau_client = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        client_idcontact_field = new javax.swing.JTextField();
        client_genre_field = new javax.swing.JComboBox<>();
        client_passeport_field = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        client_id_rechercher_spinner = new javax.swing.JSpinner();
        client_btn_rechercher = new javax.swing.JButton();
        Vol_zone = new javax.swing.JPanel();
        vol_btn_modifier = new javax.swing.JButton();
        vol_btn_supprimer = new javax.swing.JButton();
        vol_btn_ajouter = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        vol_id_field = new javax.swing.JTextField();
        vol_numero_field = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        vol_aeropdepart_field = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        vol_terminal_field = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        vol_nomcompagnie_field = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        vol_nbrplace_field = new javax.swing.JTextField();
        vol_aeroparrivee_field = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableau_vol = new javax.swing.JTable();
        vol_datearrivee_field = new com.toedter.calendar.JDateChooser();
        vol_datedepart_field = new com.toedter.calendar.JDateChooser();
        vol_prix_field = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        vol_id_rechercher_spinner = new javax.swing.JSpinner();
        vol_btn_rechercher = new javax.swing.JButton();
        Reservation_zone = new javax.swing.JPanel();
        reservation_btn_modifier = new javax.swing.JButton();
        reservation_btn_supprimer = new javax.swing.JButton();
        reservation_btn_ajouter = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        reservation_id_field = new javax.swing.JTextField();
        reservation_numero_field = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        reservation_prix_field = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        reservation_statut_field = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        reservation_fraispenalite_field = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableau_reservation = new javax.swing.JTable();
        nom = new javax.swing.JLabel();
        reservation_numplace_field = new javax.swing.JTextField();
        reservation_date_field = new com.toedter.calendar.JDateChooser();
        reservation_idclient_field = new javax.swing.JTextField();
        nom1 = new javax.swing.JLabel();
        reservation_idvol_field = new javax.swing.JTextField();
        nom2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        reservation_id_rechercher_spinner = new javax.swing.JSpinner();
        reservation_btn_rechercher = new javax.swing.JButton();
        Utilisateur_zone = new javax.swing.JPanel();
        user_btn_modifier = new javax.swing.JButton();
        user_btn_supprimer = new javax.swing.JButton();
        user_btn_ajouter = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        user_id_field = new javax.swing.JTextField();
        user_nom_field = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        user_prenom_field = new javax.swing.JTextField();
        user_email_field = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableau_user = new javax.swing.JTable();
        user_motdepasse_field = new javax.swing.JPasswordField();
        jLabel33 = new javax.swing.JLabel();
        user_idclient_field = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        user_role_field = new javax.swing.JComboBox<>();
        utilisateur_btn_rechercher = new javax.swing.JButton();
        utilisateur_id_rechercher_spinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(254, 184, 184));

        jLabel2.setFont(new java.awt.Font("Lucida Calligraphy", 0, 24)); // NOI18N
        jLabel2.setText("SWEET TRAVEL");
        jLabel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel2KeyPressed(evt);
            }
        });

        acceuil_btn_deconnexion.setBackground(new java.awt.Color(250, 27, 33));
        acceuil_btn_deconnexion.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        acceuil_btn_deconnexion.setText("Deconnection");
        acceuil_btn_deconnexion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acceuil_btn_deconnexionMouseClicked(evt);
            }
        });
        acceuil_btn_deconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceuil_btn_deconnexionActionPerformed(evt);
            }
        });

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/reglage1.png"))); // NOI18N
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(acceuil_btn_deconnexion)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(acceuil_btn_deconnexion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.setBackground(new java.awt.Color(211, 253, 210));
        jTabbedPane1.setName(""); // NOI18N

        Contact_zone.setBackground(new java.awt.Color(216, 234, 245));

        contact_btn_modifier.setText("Modifier");
        contact_btn_modifier.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        contact_btn_modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contact_btn_modifierMouseClicked(evt);
            }
        });
        contact_btn_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_btn_modifierActionPerformed(evt);
            }
        });

        contact_btn_supprimer.setText("Supprimer");
        contact_btn_supprimer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        contact_btn_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contact_btn_supprimerMouseClicked(evt);
            }
        });
        contact_btn_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_btn_supprimerActionPerformed(evt);
            }
        });

        contact_btn_ajouter.setText("Ajouter");
        contact_btn_ajouter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        contact_btn_ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contact_btn_ajouterMouseClicked(evt);
            }
        });
        contact_btn_ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_btn_ajouterActionPerformed(evt);
            }
        });

        jLabel1.setText("ID:");

        contact_id_field.setForeground(new java.awt.Color(73, 73, 73));

        contact_tel_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel3.setText("Tel:");

        contact_email_field.setForeground(new java.awt.Color(73, 73, 73));

        contact_adresse_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel4.setText("Adresse:");

        jLabel5.setText("Email:");

        contact_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Tel", "Email", "Adresse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        contact_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contact_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(contact_table);

        jButton1.setText("Rafraiche");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        contact_btn_rechercher.setText("Rechercher a partir de ID");
        contact_btn_rechercher.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        contact_btn_rechercher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contact_btn_rechercherMouseClicked(evt);
            }
        });
        contact_btn_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_btn_rechercherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Contact_zoneLayout = new javax.swing.GroupLayout(Contact_zone);
        Contact_zone.setLayout(Contact_zoneLayout);
        Contact_zoneLayout.setHorizontalGroup(
            Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Contact_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(Contact_zoneLayout.createSequentialGroup()
                        .addComponent(contact_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contact_btn_rechercher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Contact_zoneLayout.createSequentialGroup()
                                .addComponent(contact_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(contact_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(contact_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Contact_zoneLayout.createSequentialGroup()
                                .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(Contact_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(contact_tel_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Contact_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(contact_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                                .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(Contact_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(contact_adresse_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Contact_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(contact_email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 278, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Contact_zoneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        Contact_zoneLayout.setVerticalGroup(
            Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Contact_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contact_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact_btn_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Contact_zoneLayout.createSequentialGroup()
                        .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contact_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contact_tel_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Contact_zoneLayout.createSequentialGroup()
                        .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contact_email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Contact_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contact_adresse_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Contact", Contact_zone);

        Client_zone.setBackground(new java.awt.Color(252, 219, 251));

        client_btn_modifier.setText("Modifier");
        client_btn_modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                client_btn_modifierMouseClicked(evt);
            }
        });

        client_btn_supprimer.setText("Supprimer");
        client_btn_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                client_btn_supprimerMouseClicked(evt);
            }
        });

        client_btn_ajouter.setText("Ajouter");
        client_btn_ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                client_btn_ajouterMouseClicked(evt);
            }
        });

        jLabel6.setText("ID:");

        client_nom_field.setForeground(new java.awt.Color(73, 73, 73));
        client_nom_field.setText("bore");
        client_nom_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_nom_fieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Nom:");

        client_prenom_field.setForeground(new java.awt.Color(73, 73, 73));
        client_prenom_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_prenom_fieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Passeport");

        jLabel9.setText("Prenom:");

        tableau_client.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Prenom", "Genre", "Passeport", "Idcontact"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableau_client.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableau_clientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableau_client);

        jLabel10.setText("Genre:");

        jLabel32.setText("idContact:");

        client_idcontact_field.setForeground(new java.awt.Color(73, 73, 73));

        client_genre_field.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Homme", "Femme", "Non specifier" }));

        jButton5.setText("Rafraichir");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        client_btn_rechercher.setText("Rechercher a partir de ID");
        client_btn_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_btn_rechercherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Client_zoneLayout = new javax.swing.GroupLayout(Client_zone);
        Client_zone.setLayout(Client_zoneLayout);
        Client_zoneLayout.setHorizontalGroup(
            Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Client_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(Client_zoneLayout.createSequentialGroup()
                        .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Client_zoneLayout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(Client_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(client_nom_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Client_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(client_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(Client_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(client_passeport_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Client_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(client_prenom_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Client_zoneLayout.createSequentialGroup()
                                        .addComponent(client_genre_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 140, Short.MAX_VALUE))
                                    .addComponent(client_idcontact_field)))
                            .addGroup(Client_zoneLayout.createSequentialGroup()
                                .addComponent(client_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(client_btn_rechercher)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(client_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(client_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(client_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(180, 180, 180))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Client_zoneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        Client_zoneLayout.setVerticalGroup(
            Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Client_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(client_id_rechercher_spinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(client_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(client_btn_rechercher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Client_zoneLayout.createSequentialGroup()
                        .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(client_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(client_nom_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Client_zoneLayout.createSequentialGroup()
                        .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(client_genre_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(client_prenom_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Client_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(client_idcontact_field, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(client_passeport_field))))
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Client", Client_zone);

        Vol_zone.setBackground(new java.awt.Color(203, 253, 213));

        vol_btn_modifier.setText("Modifier");
        vol_btn_modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vol_btn_modifierMouseClicked(evt);
            }
        });

        vol_btn_supprimer.setText("Supprimer");
        vol_btn_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vol_btn_supprimerMouseClicked(evt);
            }
        });

        vol_btn_ajouter.setText("Ajouter");
        vol_btn_ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vol_btn_ajouterMouseClicked(evt);
            }
        });

        jLabel11.setText("ID:");

        vol_id_field.setForeground(new java.awt.Color(73, 73, 73));

        vol_numero_field.setForeground(new java.awt.Color(73, 73, 73));
        vol_numero_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vol_numero_fieldActionPerformed(evt);
            }
        });

        jLabel12.setText("Numero:");

        vol_aeropdepart_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel13.setText("Aero de Depart:");

        jLabel14.setText("Date d'arrivee:");

        jLabel15.setText("Terminal:");

        vol_terminal_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel16.setText("Nom Compagnie:");

        vol_nomcompagnie_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel17.setText("Nombre Places:");

        vol_nbrplace_field.setForeground(new java.awt.Color(73, 73, 73));

        vol_aeroparrivee_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel18.setText("Aero d'arrivee:");

        jLabel19.setText("Date de depart:");

        jScrollPane3.setEnabled(false);

        tableau_vol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Num", "Date de depart", "Date d'arrivee", "Aeroport de depart", "Aeroport d'arrivee", "Nom Compagnie", "Nombre places", "Terminal", "Prix"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableau_vol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableau_volMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableau_vol);

        vol_datearrivee_field.setBackground(new java.awt.Color(203, 253, 213));
        vol_datearrivee_field.setDateFormatString("yyyy-MM-dd"); // NOI18N

        vol_datedepart_field.setBackground(new java.awt.Color(203, 253, 213));
        vol_datedepart_field.setToolTipText("");
        vol_datedepart_field.setDateFormatString("yyyy-MM-dd");

        vol_prix_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel34.setText("Prix:");

        jButton4.setText("Rafraichir");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        vol_btn_rechercher.setText("Rechercher a partir de ID");
        vol_btn_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vol_btn_rechercherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Vol_zoneLayout = new javax.swing.GroupLayout(Vol_zone);
        Vol_zone.setLayout(Vol_zoneLayout);
        Vol_zoneLayout.setHorizontalGroup(
            Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Vol_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Vol_zoneLayout.createSequentialGroup()
                                .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                                        .addGap(66, 66, 66)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(vol_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Vol_zoneLayout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(Vol_zoneLayout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addGap(13, 13, 13)))
                                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(vol_datedepart_field, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(vol_numero_field, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))))
                                .addGap(18, 90, Short.MAX_VALUE)
                                .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(vol_aeroparrivee_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Vol_zoneLayout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(Vol_zoneLayout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(12, 12, 12)))
                                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(vol_datearrivee_field, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(vol_aeropdepart_field, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                                .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(vol_nomcompagnie_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(vol_terminal_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(vol_nbrplace_field, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel34)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(vol_prix_field, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(Vol_zoneLayout.createSequentialGroup()
                                .addComponent(vol_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vol_btn_rechercher)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(vol_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(vol_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(vol_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 143, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Vol_zoneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        Vol_zoneLayout.setVerticalGroup(
            Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Vol_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(vol_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(vol_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(vol_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(vol_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vol_btn_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vol_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vol_terminal_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vol_datearrivee_field, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vol_aeropdepart_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vol_nomcompagnie_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vol_numero_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(12, 12, 12)
                .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                        .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vol_aeroparrivee_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(vol_nbrplace_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Vol_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(vol_prix_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                    .addGroup(Vol_zoneLayout.createSequentialGroup()
                        .addComponent(vol_datedepart_field, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Vol", Vol_zone);

        Reservation_zone.setBackground(new java.awt.Color(253, 246, 190));

        reservation_btn_modifier.setText("Modifier");
        reservation_btn_modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservation_btn_modifierMouseClicked(evt);
            }
        });

        reservation_btn_supprimer.setText("Supprimer");
        reservation_btn_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservation_btn_supprimerMouseClicked(evt);
            }
        });

        reservation_btn_ajouter.setText("Ajouter");
        reservation_btn_ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservation_btn_ajouterMouseClicked(evt);
            }
        });

        jLabel20.setText("ID:");

        reservation_id_field.setForeground(new java.awt.Color(73, 73, 73));

        reservation_numero_field.setForeground(new java.awt.Color(73, 73, 73));
        reservation_numero_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservation_numero_fieldActionPerformed(evt);
            }
        });

        jLabel21.setText("Numero:");

        reservation_prix_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel22.setText("Prix:");

        jLabel23.setText("Date:");

        jLabel24.setText("Statut:");

        reservation_statut_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel25.setText("Frais penalite:");

        reservation_fraispenalite_field.setForeground(new java.awt.Color(73, 73, 73));

        tableau_reservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Num", "Date et heure", "Prix", "Statut", "Frais de penalite", "Numero de place", "id client", "id vol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableau_reservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableau_reservationMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableau_reservation);

        nom.setText("Numero de place");

        reservation_numplace_field.setForeground(new java.awt.Color(73, 73, 73));

        reservation_date_field.setBackground(new java.awt.Color(253, 246, 190));
        reservation_date_field.setDateFormatString("yyyy-MM-dd"); // NOI18N

        reservation_idclient_field.setForeground(new java.awt.Color(73, 73, 73));

        nom1.setText("idclien:");

        reservation_idvol_field.setForeground(new java.awt.Color(73, 73, 73));

        nom2.setText("idvol");

        jButton3.setText("Rafraichir");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        reservation_btn_rechercher.setText("Rechercher a partir de ID");
        reservation_btn_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservation_btn_rechercherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Reservation_zoneLayout = new javax.swing.GroupLayout(Reservation_zone);
        Reservation_zone.setLayout(Reservation_zoneLayout);
        Reservation_zoneLayout.setHorizontalGroup(
            Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Reservation_zoneLayout.createSequentialGroup()
                .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Reservation_zoneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(reservation_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reservation_btn_rechercher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reservation_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(reservation_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(reservation_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Reservation_zoneLayout.createSequentialGroup()
                        .addContainerGap(62, Short.MAX_VALUE)
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Reservation_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reservation_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Reservation_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reservation_numero_field, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 121, Short.MAX_VALUE)
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Reservation_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(Reservation_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(8, 8, 8)))
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(reservation_date_field, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reservation_prix_field, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                        .addGap(18, 120, Short.MAX_VALUE)
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Reservation_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reservation_statut_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Reservation_zoneLayout.createSequentialGroup()
                                .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel25)
                                    .addComponent(nom2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reservation_idvol_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reservation_fraispenalite_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(160, Short.MAX_VALUE))
            .addGroup(Reservation_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(Reservation_zoneLayout.createSequentialGroup()
                        .addComponent(nom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reservation_numplace_field, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116)
                        .addComponent(nom1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reservation_idclient_field, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Reservation_zoneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );
        Reservation_zoneLayout.setVerticalGroup(
            Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Reservation_zoneLayout.createSequentialGroup()
                .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Reservation_zoneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(reservation_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reservation_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reservation_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(reservation_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reservation_btn_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reservation_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Reservation_zoneLayout.createSequentialGroup()
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Reservation_zoneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(reservation_date_field, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Reservation_zoneLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reservation_statut_field, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reservation_prix_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reservation_fraispenalite_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reservation_numero_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reservation_numplace_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reservation_idclient_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nom1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Reservation_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(reservation_idvol_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nom2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reservation", Reservation_zone);

        Utilisateur_zone.setBackground(new java.awt.Color(208, 208, 253));

        user_btn_modifier.setText("Modifier");
        user_btn_modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_btn_modifierMouseClicked(evt);
            }
        });

        user_btn_supprimer.setText("Supprimer");
        user_btn_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_btn_supprimerMouseClicked(evt);
            }
        });

        user_btn_ajouter.setText("Ajouter");
        user_btn_ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_btn_ajouterMouseClicked(evt);
            }
        });

        jLabel26.setText("ID:");

        user_id_field.setForeground(new java.awt.Color(73, 73, 73));

        user_nom_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel27.setText("Nom:");

        user_prenom_field.setForeground(new java.awt.Color(73, 73, 73));
        user_prenom_field.setToolTipText("fgcnn");
        user_prenom_field.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_prenom_fieldMouseClicked(evt);
            }
        });
        user_prenom_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_prenom_fieldActionPerformed(evt);
            }
        });

        user_email_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel28.setText("Email:");

        jLabel29.setText("Prenom:");

        jLabel30.setText("Mot de passe:");

        jLabel31.setText("Role:");

        jScrollPane5.setEnabled(false);

        tableau_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Prenom", "Email", "Mot de passe", "role", "id client"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableau_user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableau_userMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tableau_user);

        user_motdepasse_field.setForeground(new java.awt.Color(73, 73, 73));

        jLabel33.setText("idclient:");

        user_idclient_field.setForeground(new java.awt.Color(73, 73, 73));

        jButton2.setText("Rafraichir");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        user_role_field.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "client", "admin" }));

        utilisateur_btn_rechercher.setText("Rechercher a partir de ID");
        utilisateur_btn_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilisateur_btn_rechercherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Utilisateur_zoneLayout = new javax.swing.GroupLayout(Utilisateur_zone);
        Utilisateur_zone.setLayout(Utilisateur_zoneLayout);
        Utilisateur_zoneLayout.setHorizontalGroup(
            Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Utilisateur_zoneLayout.createSequentialGroup()
                        .addComponent(utilisateur_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(utilisateur_btn_rechercher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 572, Short.MAX_VALUE)
                        .addComponent(user_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(user_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(user_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Utilisateur_zoneLayout.createSequentialGroup()
                        .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(user_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(user_nom_field, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(185, 185, 185)
                        .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(user_email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(user_prenom_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(user_idclient_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(187, 187, 187)
                        .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(user_role_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(161, 161, 161))
                            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(user_motdepasse_field, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Utilisateur_zoneLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        Utilisateur_zoneLayout.setVerticalGroup(
            Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(user_btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(user_btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(user_btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(utilisateur_id_rechercher_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(utilisateur_btn_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(user_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Utilisateur_zoneLayout.createSequentialGroup()
                        .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(user_prenom_field, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(user_motdepasse_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(user_email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(user_role_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(user_nom_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(Utilisateur_zoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(user_idclient_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Utilisateur", Utilisateur_zone);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //My globals var
    private String[][] T1=new String[50][4];
    private String[][] T2=new String[50][6];
    private String[][] T3=new String[50][10];
    private String[][] T4=new String[50][9];
    private String[][] T5=new String[50][7];
    
    //Fonction de remplissage
    private void Remplire_tableau_contact(){        
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        int col, lig;
        for(lig=0;lig<50;lig++){
            for(col=0;col<4;col++){
                T1[lig][col]=null;
            }
        }
        try {
            int a=0;
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("Connexion avec succ√®s");
            String select_query="SELECT * FROM contact ORDER BY id DESC;";
            PreparedStatement stm= conn.prepareStatement(select_query);            
            ResultSet res_select=stm.executeQuery(); 
            while(res_select.next()){
                T1[a][0]=res_select.getString("id");
                T1[a][1]=res_select.getString("tel");
                T1[a][2]=res_select.getString("email");
                T1[a][3]=res_select.getString("adresse");
                a++;
                if(a==50){
                    break;
                }
                
            }
        } 
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        
        contact_table.setModel(new javax.swing.table.DefaultTableModel(
            T1,
            new String [] {
                "ID", "Tel", "Email", "Adresse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    } 
    
    private void Remplire_tableau_client(){  
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        int col, lig;
        for(lig=0;lig<50;lig++){
            for(col=0;col<4;col++){
                T2[lig][col]=null;
            }
        }
        try {
            int a=0;
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("Connexion avec succ√®s");
            String select_query="SELECT * FROM client ORDER BY id DESC;";
            PreparedStatement stm= conn.prepareStatement(select_query);            
            ResultSet res_select=stm.executeQuery(); 
            while(res_select.next()){
                T2[a][0]=res_select.getString("id");
                T2[a][1]=res_select.getString("nom");
                T2[a][2]=res_select.getString("prenom");
                T2[a][3]=res_select.getString("genre");
                T2[a][4]=res_select.getString("passport");
                T2[a][5]=res_select.getString("idcontact");
                a++;
                if(a==50){
                    break;
                }
                
            }
        } 
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        tableau_client.setModel(new javax.swing.table.DefaultTableModel(
            T2,
            new String [] {
                "ID", "Nom", "Prenom", "Genre", "Passeport", "Idcontact"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    }
    
    private void Remplire_tableau_vol(){   
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        int col, lig;
        for(lig=0;lig<50;lig++){
            for(col=0;col<4;col++){
                T3[lig][col]=null;
            }
        }
        try {
            int a=0;
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("Connexion avec succ√®s");
            String select_query="SELECT * FROM vol ORDER BY id DESC;";
            PreparedStatement stm= conn.prepareStatement(select_query);            
            ResultSet res_select=stm.executeQuery(); 
            while(res_select.next()){
                T3[a][0]=res_select.getString("id");
                T3[a][1]=res_select.getString("num");
                T3[a][2]=res_select.getString("datedepart");
                T3[a][3]=res_select.getString("datearrivee");
                T3[a][4]=res_select.getString("aeropdepart");
                T3[a][5]=res_select.getString("aeroparrivee");
                T3[a][6]=res_select.getString("nomcompagnie");
                T3[a][7]=res_select.getString("nbrplace");
                T3[a][8]=res_select.getString("terminal");
                T3[a][9]=res_select.getString("prix");
                a++;
                if(a==50){
                    break;
                }
                
            }
        } 
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        tableau_vol.setModel(new javax.swing.table.DefaultTableModel(
            T3,
            new String [] {
                "ID", "Num", "Date de depart", "Date d'arrivee", "Aeroport de depart", "Aeroport d'arrivee", "Nom Compagnie", "Nombre places", "Terminal", "Prix"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    }
    
    private void Remplire_tableau_reservation(){    
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        int col, lig;
        for(lig=0;lig<50;lig++){
            for(col=0;col<4;col++){
                T4[lig][col]=null;
            }
        }
        try {
            int a=0;
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("Connexion avec succ√®s");
            String select_query="SELECT * FROM reservation ORDER BY id DESC;";
            PreparedStatement stm= conn.prepareStatement(select_query);            
            ResultSet res_select=stm.executeQuery(); 
            while(res_select.next()){
                T4[a][0]=res_select.getString("id");
                T4[a][1]=res_select.getString("num");
                T4[a][2]=res_select.getString("dateheure");
                T4[a][3]=res_select.getString("prix");
                T4[a][4]=res_select.getString("statut");
                T4[a][5]=res_select.getString("fraispenalite");
                T4[a][6]=res_select.getString("numplace");
                T4[a][7]=res_select.getString("idclient");
                T4[a][8]=res_select.getString("idvol");
                a++;
                if(a==50){
                    break;
                }
                
            }
        } 
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        tableau_reservation.setModel(new javax.swing.table.DefaultTableModel(
            T4,
            new String [] {
                "ID", "Num", "Date et heure", "Prix", "Statut", "Frais de penalite", "Numero de vol", "id client", "id vol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    }
    
    private void Remplire_tableau_user(){
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        int col, lig;
        for(lig=0;lig<50;lig++){
            for(col=0;col<4;col++){
                T5[lig][col]=null;
            }
        }
        try {
            int a=0;
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("Connexion avec succ√®s");
            String select_query="SELECT * FROM user ORDER BY id DESC;";
            PreparedStatement stm= conn.prepareStatement(select_query);            
            ResultSet res_select=stm.executeQuery(); 
            while(res_select.next()){
                T5[a][0]=res_select.getString("id");
                T5[a][1]=res_select.getString("nom");
                T5[a][2]=res_select.getString("prenom");
                T5[a][3]=res_select.getString("email");
                T5[a][4]=res_select.getString("motdepasse");
                T5[a][5]=res_select.getString("role");
                T5[a][6]=res_select.getString("idclient");
                a++;
                if(a==50){
                    break;
                }
                
            }
        } 
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        
        tableau_user.setModel(new javax.swing.table.DefaultTableModel(
            T5,
            new String [] {
                "ID", "Nom", "Prenom", "Email", "Mot de passe", "role", "id client"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    }
    
    private void Remplire_tableau(){
        Remplire_tableau_contact();
        Remplire_tableau_client();
        Remplire_tableau_vol();
        Remplire_tableau_reservation();
        Remplire_tableau_user();
    }
    
    private void Remplire_champ_contact(){
        int a =contact_table.getSelectedRow();
        contact_id_field.setText(T1[a][0]);
        contact_tel_field.setText(T1[a][1]);
        contact_email_field.setText(T1[a][2]);
        contact_adresse_field.setText(T1[a][3]);
    }
    
    private void Remplire_champ_client(){
        int a =tableau_client.getSelectedRow();
        client_id_field.setText(T2[a][0]);
        client_nom_field.setText(T2[a][1]);
        client_prenom_field.setText(T2[a][2]);
        client_genre_field.setSelectedItem(T2[a][3]);
        client_passeport_field.setText(T2[a][4]);
        client_idcontact_field.setText(T2[a][5]);
    }
    
    private void Remplire_champ_vol(){
        int a =tableau_vol.getSelectedRow();
        vol_id_field.setText(T3[a][0]);
        vol_numero_field.setText(T3[a][1]);  
        try{
            String ladate= T3[a][2];        
            ladate=ladate.substring(0,10);
            Date ladatefinale= new SimpleDateFormat("yyyy-MM-dd").parse(ladate);
            vol_datedepart_field.setDate(ladatefinale);
        }
        catch(ParseException e){
            e.printStackTrace();
        }    
        try{
            String ladate= T3[a][3];        
            ladate=ladate.substring(0,10);
            Date ladatefinale= new SimpleDateFormat("yyyy-MM-dd").parse(ladate);
            vol_datearrivee_field.setDate(ladatefinale);
        }
        catch(ParseException e){
            e.printStackTrace();
        }  
        vol_aeropdepart_field.setText(T3[a][4]);
        vol_aeroparrivee_field.setText(T3[a][5]);
        vol_nomcompagnie_field.setText(T3[a][6]);
        vol_nbrplace_field.setText(T3[a][7]);
        vol_terminal_field.setText(T3[a][8]);
        vol_prix_field.setText(T3[a][9]);
    }
    
    private void Remplire_champ_reservation(){
        int index=0;
        int a=tableau_reservation.getSelectedRow();
        reservation_id_field.setText(T4[a][index++]);
        reservation_numero_field.setText(T4[a][index++]);
        try{
            String ladate= T4[a][index++];        
            ladate=ladate.substring(0,10);
            Date ladatefinale= new SimpleDateFormat("yyyy-MM-dd").parse(ladate);
            reservation_date_field.setDate(ladatefinale);
        }
        catch(ParseException e){
            e.printStackTrace();
        } 
        reservation_prix_field.setText(T4[a][index++]);
        reservation_statut_field.setText(T4[a][index++]);
        reservation_fraispenalite_field.setText(T4[a][index++]);
        reservation_numplace_field.setText(T4[a][index++]);
        reservation_idclient_field.setText(T4[a][index++]);
        reservation_idvol_field.setText(T4[a][index++]);
        
    }
    
    private void Remplire_champ_utilisateur(){
        int a =tableau_user.getSelectedRow();
        int index=0;
        user_id_field.setText(T5[a][index++]);
        user_nom_field.setText(T5[a][index++]);
        user_prenom_field.setText(T5[a][index++]);
        user_email_field.setText(T5[a][index++]);
        user_motdepasse_field.setText(T5[a][index++]);
        user_role_field.setSelectedItem(T5[a][index++]);
        user_idclient_field.setText(T5[a][index++]);
    }
    
    private void jLabel2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2KeyPressed

    private void acceuil_btn_deconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceuil_btn_deconnexionActionPerformed
        // TODO add your handling code here:
        Info_user.idclient="";
        Info_user.nom="";
    }//GEN-LAST:event_acceuil_btn_deconnexionActionPerformed

    private void acceuil_btn_deconnexionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acceuil_btn_deconnexionMouseClicked
        // TODO add your handling code here:
        //On decharge les donnees
        Info_user.idclient="";
        Info_user.iduser="";
        Info_user.nom="";
        Info_user.prenom="";
        Info_user.email="";
        Info_user.motdepasse="";
        Info_user.tel="";
        Info_user.adresse="";
        Info_user.passeport="";
        Info_user.genre="";
        Info_user.idcontact="";
        //on charge la connexion
        Connexion.main(null);
        //on ferme la pagee d'acceuil
        this.dispose();
    }//GEN-LAST:event_acceuil_btn_deconnexionMouseClicked

    private void user_prenom_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_prenom_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_prenom_fieldActionPerformed

    private void user_prenom_fieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_prenom_fieldMouseClicked
        // TODO add your handling code here:
        user_prenom_field.setText("");
        
    }//GEN-LAST:event_user_prenom_fieldMouseClicked

    private void user_btn_ajouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_btn_ajouterMouseClicked
        // TODO add your handling code here:
        //On recupere les infos
        String user_email=user_email_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        String user_motdepasse=user_motdepasse_field.getText();
        String user_nom=user_nom_field.getText();
        String user_prenom=user_prenom_field.getText();
        String user_idclient=user_idclient_field.getText();
        String user_role=(String)user_role_field.getSelectedItem();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="INSERT INTO user (nom, prenom, email, motdepasse, role, idclient) VALUES (?,?,?,?,?,?);";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setString(1, user_nom);
            state.setString(2, user_prenom);
            state.setString(3, user_email);
            state.setString(4, user_motdepasse);
            state.setString(5, user_role);
            state.setString(6, user_idclient);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Ajout avec succes", "Ajout reussi", JOptionPane.INFORMATION_MESSAGE);

        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_user_btn_ajouterMouseClicked

    private void reservation_numero_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservation_numero_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reservation_numero_fieldActionPerformed

    private void reservation_btn_ajouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservation_btn_ajouterMouseClicked
        // TODO add your handling code here:
        //On recupere les infos
        String reservation_numero=reservation_numero_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        Date reservation_date1= reservation_date_field.getDate();
        SimpleDateFormat YMD= new SimpleDateFormat("yyyy-MM-dd");
        String reservation_date=YMD.format(reservation_date1);
        float reservation_prix=Float.parseFloat(reservation_prix_field.getText());
        String reservation_statut=reservation_statut_field.getText();
        String reservation_fraispenalite=reservation_fraispenalite_field.getText();
        String reservation_numplace=reservation_numplace_field.getText();
        String reservation_idclient=reservation_idclient_field.getText();
        String reservation_idvol=reservation_idvol_field.getText();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";

        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="INSERT INTO reservation (num, dateheure, prix, statut, fraispenalite, numplace, idclient, idvol) VALUES (?,?,?,?,?,?,?,?);";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setString(1, reservation_numero);
            state.setString(2, reservation_date);
            state.setFloat(3, reservation_prix);
            state.setString(4, reservation_statut);
            state.setString(5, reservation_fraispenalite);
            state.setString(6, reservation_numplace);
            state.setString(7, reservation_idclient);
            state.setString(8, reservation_idvol);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Ajout avec succes", "Ajout reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_reservation_btn_ajouterMouseClicked

    private void reservation_btn_supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservation_btn_supprimerMouseClicked
        // TODO add your handling code here:
        int reservation_id = Integer.parseInt(reservation_id_field.getText());
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="DELETE FROM `reservation` WHERE `reservation`.`id` = ?;";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setInt(1, reservation_id);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Supprimer avec succes", "Supprimer reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_reservation_btn_supprimerMouseClicked

    private void reservation_btn_modifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservation_btn_modifierMouseClicked
        // TODO add your handling code here:
        int reservation_id = Integer.parseInt(reservation_id_field.getText());
        String reservation_numero=reservation_numero_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        Date reservation_date1= reservation_date_field.getDate();
        SimpleDateFormat ymd= new SimpleDateFormat("yyyy-MM-dd");
        String reservation_date=ymd.format(reservation_date1);
        float reservation_prix=Float.parseFloat(reservation_prix_field.getText());
        float reservation_fraispenalite=Float.parseFloat(reservation_fraispenalite_field.getText());
        String reservation_statut=reservation_statut_field.getText();
        String reservation_numplace=reservation_numplace_field.getText();
        String reservation_idvol=reservation_idvol_field.getText();
        String reservation_idclient=reservation_idclient_field.getText();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete_user="SELECT * FROM reservation WHERE id=?;";
            PreparedStatement state_user= conn.prepareStatement(requete_user);
            state_user.setInt(1, reservation_id);
            ResultSet verification=state_user.executeQuery();
            if(!(!verification.wasNull() && verification.first())){
                JOptionPane.showMessageDialog(this, "ce numero d'ID n'existe pas", "erreur", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String requete="UPDATE `reservation` SET `num` =?, `dateheure`=?, `prix`=?, `statut`=?, `fraispenalite`=?, `numplace`=? `idclient`=?, `idvol`=? WHERE `reservation`.`id` = ?";
                PreparedStatement state= conn.prepareStatement(requete);
                state.setString(1, reservation_numero);
                state.setString(2, reservation_date);
                state.setFloat(3, reservation_prix);
                state.setString(4, reservation_statut);
                state.setFloat(5, reservation_fraispenalite);
                state.setString(6, reservation_numplace);
                state.setString(7, reservation_idclient);
                state.setString(8, reservation_idvol);
                state.setInt(9, reservation_id);
                int result=state.executeUpdate();
                JOptionPane.showMessageDialog(this, "Modification effectuer avec succes", "Modification reussi", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_reservation_btn_modifierMouseClicked

    private void vol_numero_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vol_numero_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vol_numero_fieldActionPerformed

    
    private void vol_btn_ajouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vol_btn_ajouterMouseClicked
        // TODO add your handling code here:
        //On recupere les infos
        String vol_numero=vol_numero_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        SimpleDateFormat ymd= new SimpleDateFormat("yyyy-MM-dd");
        Date vol_datedepart1= vol_datedepart_field.getDate();
        String vol_datedepart=ymd.format(vol_datedepart1);
        Date vol_datearrivee1= vol_datearrivee_field.getDate();
        String vol_datearrivee=ymd.format(vol_datearrivee1);
        String vol_aeropdepart=vol_aeropdepart_field.getText();
        String vol_aeroparrivee=vol_aeroparrivee_field.getText();
        String vol_terminal=vol_terminal_field.getText();
        String vol_nomcompagnie=vol_nomcompagnie_field.getText();
        int vol_nbrplace = Integer.parseInt(vol_nbrplace_field.getText());
        long vol_prix = Long.parseLong(vol_prix_field.getText());
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec"+"\n"+vol_datedepart);
            String requete="INSERT INTO vol (num, aeropdepart, aeroparrivee, terminal, nomcompagnie, nbrplace, datedepart, datearrivee, prix ) VALUES (?,?,?,?,?,?,?,?,?);";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setString(1, vol_numero);
            state.setString(2, vol_aeropdepart);
            state.setString(3, vol_aeroparrivee);
            state.setString(4, vol_terminal);
            state.setString(5, vol_nomcompagnie);
            state.setInt(6, vol_nbrplace);
            state.setString(7, vol_datedepart);
            System.out.println(vol_datedepart);
            
            state.setString(8, vol_datearrivee);
            System.out.println(vol_datearrivee);
            state.setLong(9, vol_prix);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Ajout avec succes", "Ajout reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_vol_btn_ajouterMouseClicked

    private void vol_btn_supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vol_btn_supprimerMouseClicked
        // TODO add your handling code here:
        int vol_id = Integer.parseInt(vol_id_field.getText());
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="DELETE FROM `vol` WHERE `vol`.`id` = ?;";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setInt(1, vol_id);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Supprimer avec succes", "Supprimer reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "System error. probleme de connexion ou de requete avec la base de donnee. Reessayez votre operation en verifiant les infos ou redemarrez l'application", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        Remplire_tableau();
    }//GEN-LAST:event_vol_btn_supprimerMouseClicked

    private void vol_btn_modifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vol_btn_modifierMouseClicked
        // TODO add your handling code here:
        int vol_id = Integer.parseInt(vol_id_field.getText());
        String vol_numero=vol_numero_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        Date vol_datedepart1= vol_datedepart_field.getDate();
        SimpleDateFormat ymd= new SimpleDateFormat("yyyy-MM-dd");
        String vol_datedepart=ymd.format(vol_datedepart1);
        Date vol_datearrivee1= vol_datedepart_field.getDate();
        String vol_datearrivee=ymd.format(vol_datearrivee1);
        String vol_aeropdepart=vol_aeropdepart_field.getText();
        String vol_aeroparrivee=vol_aeroparrivee_field.getText();
        String vol_terminal=vol_terminal_field.getText();
        String vol_nomcompagnie=vol_nomcompagnie_field.getText();
        int vol_nbrplace = Integer.parseInt(vol_nbrplace_field.getText());
        long vol_prix = Integer.parseInt(vol_prix_field.getText());
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete_user="SELECT * FROM vol WHERE id=?;";
            PreparedStatement state_user= conn.prepareStatement(requete_user);
            state_user.setInt(1, vol_id);
            ResultSet verification=state_user.executeQuery();
            if(!(!verification.wasNull() && verification.first())){
                JOptionPane.showMessageDialog(this, "ce numero d'ID n'existe pas", "erreur", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String requete="UPDATE `vol` SET `num` =?, `aeropdepart` = ?, `aeroparrivee`=?, `terminal`=?, `nomcompagnie`=?, `nbrplace`=?, `datedepart`=?, `datearrivee`=?, `prix`=? WHERE `vol`.`id` = ?";
                PreparedStatement state= conn.prepareStatement(requete);
                state.setString(1, vol_numero);
                state.setString(2, vol_aeropdepart);
                state.setString(3, vol_aeroparrivee);
                state.setString(4, vol_terminal);
                state.setString(5, vol_nomcompagnie);
                state.setInt(6, vol_nbrplace);
                state.setString(7,  vol_datedepart);
                state.setString(8,  vol_datearrivee);
                state.setLong(9, vol_prix);
                state.setInt(10, vol_id);
                int result=state.executeUpdate();
                JOptionPane.showMessageDialog(this, "Modification effectuer avec succes", "Modification reussi", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_vol_btn_modifierMouseClicked

    private void client_prenom_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_prenom_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_client_prenom_fieldActionPerformed

    private void client_nom_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_nom_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_client_nom_fieldActionPerformed

    private void client_btn_ajouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_client_btn_ajouterMouseClicked
        // TODO add your handling code here:
        //On recupere les infos
        String client_nom=client_nom_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        String client_prenom=client_prenom_field.getText();
        String client_passeport=client_passeport_field.getText();
        String client_genre=(String)(client_genre_field.getSelectedItem());
        String client_idcontact=client_idcontact_field.getText();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="INSERT INTO client (nom, prenom, genre, passport, idcontact) VALUES (?,?,?,?,?);";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setString(1, client_nom);
            state.setString(2, client_prenom);
            state.setString(3, client_genre);
            state.setString(4, client_passeport);
            state.setString(5, client_idcontact);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Ajout avec succes", "Ajout reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_client_btn_ajouterMouseClicked

    private void client_btn_supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_client_btn_supprimerMouseClicked
        // TODO add your handling code here:
        int client_id = Integer.parseInt(client_id_field.getText());
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="DELETE FROM `client` WHERE `client`.`id` = ?;";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setInt(1, client_id);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Supprimer avec succes", "Supprimer reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_client_btn_supprimerMouseClicked

    private void client_btn_modifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_client_btn_modifierMouseClicked
        // TODO add your handling code here:
        int client_id = Integer.parseInt(client_id_field.getText());
        String client_nom=client_nom_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        String client_prenom=client_prenom_field.getText();
        String client_passeport=client_passeport_field.getText();
        String client_genre=(String)(client_genre_field.getSelectedItem());
        String client_idcontact=client_idcontact_field.getText();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete_user="SELECT * FROM client WHERE id=?;";
            PreparedStatement state_user= conn.prepareStatement(requete_user);
            state_user.setInt(1, client_id);
            ResultSet verification=state_user.executeQuery();
            if(!(!verification.wasNull() && verification.first())){
                JOptionPane.showMessageDialog(this, "ce numero d'ID n'existe pas", "erreur", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String requete="UPDATE `client` SET `nom` =?, `prenom` = ?, `passport` = ?, `idcontact`=?, `genre` = ? WHERE `client`.`id` = ?";
                PreparedStatement state= conn.prepareStatement(requete);
                state.setString(1, client_nom);
                state.setString(2, client_prenom);
                state.setString(3, client_passeport);
                state.setString(5, client_genre);
                state.setString(4, client_idcontact);
                state.setInt(6, client_id);
                int result=state.executeUpdate();
                JOptionPane.showMessageDialog(this, "Modification effectuer avec succes", "Modification reussi", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_client_btn_modifierMouseClicked

    private void contact_btn_ajouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contact_btn_ajouterMouseClicked
        // TODO add your handling code here:
        //On recupere les infos
        String contact_tel=contact_tel_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        String contact_email=contact_email_field.getText();
        String contact_adresse=contact_adresse_field.getText();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="INSERT INTO contact (tel, email, adresse) VALUES (?,?,?);";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setString(1, contact_tel);
            state.setString(2, contact_email);
            state.setString(3, contact_adresse);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Ajout avec succes", "Ajout reussi", JOptionPane.INFORMATION_MESSAGE);

        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_contact_btn_ajouterMouseClicked

    private void contact_btn_supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contact_btn_supprimerMouseClicked
        // TODO add your handling code here:
        //On recupere les infos
        int contact_id = Integer.parseInt(contact_id_field.getText());
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="DELETE FROM `contact` WHERE `contact`.`id` = ?;";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setInt(1, contact_id);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Supprimer avec succes", "Supprimer reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_contact_btn_supprimerMouseClicked

    private void contact_btn_modifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contact_btn_modifierMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_contact_btn_modifierMouseClicked

    private void contact_btn_ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_btn_ajouterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contact_btn_ajouterActionPerformed

    private void contact_btn_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_btn_supprimerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contact_btn_supprimerActionPerformed

    private void contact_btn_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_btn_modifierActionPerformed
        // TODO add your handling code here:
        int contact_id = Integer.parseInt(contact_id_field.getText());
        String contact_email=contact_email_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        String contact_tel=contact_tel_field.getText();
        String contact_adresse=contact_adresse_field.getText();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete_user="SELECT * FROM contact WHERE id=?;";
            PreparedStatement state_user= conn.prepareStatement(requete_user);
            state_user.setInt(1, contact_id);
            ResultSet verification=state_user.executeQuery();
            if(!(!verification.wasNull() && verification.first())){
                JOptionPane.showMessageDialog(this, "ce numero d'ID n'existe pas", "erreur", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String requete="UPDATE `contact` SET `email` =?, `tel` = ?, `adresse` = ? WHERE `contact`.`id` = ?";
                PreparedStatement state= conn.prepareStatement(requete);
                state.setString(1, contact_email);
                state.setString(2, contact_tel);
                state.setString(3, contact_adresse);
                state.setInt(4, contact_id);
                int result=state.executeUpdate();
                JOptionPane.showMessageDialog(this, "Modification effectuer avec succes", "Modification reussi", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_contact_btn_modifierActionPerformed

    private void user_btn_modifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_btn_modifierMouseClicked
        // TODO add your handling code here:
        int user_id = Integer.parseInt(user_id_field.getText());
        String user_nom=user_nom_field.getText();
        /*int contact_tel = Integer.parseInt(contact_tel_field.getText());*/
        String user_prenom=user_prenom_field.getText();
        String user_email=user_email_field.getText();
        String user_idclient=user_idclient_field.getText();
        String user_motdepasse=user_motdepasse_field.getText();
        String user_role=(String)user_role_field.getSelectedItem();
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete_user="SELECT * FROM user WHERE id=?;";
            PreparedStatement state_user= conn.prepareStatement(requete_user);
            state_user.setInt(1, user_id);
            ResultSet verification=state_user.executeQuery();
            if(!(!verification.wasNull() && verification.first())){
                JOptionPane.showMessageDialog(this, "ce numero d'ID n'existe pas", "erreur", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String requete="UPDATE `user` SET `nom` =?, `prenom` = ?, `email` = ?, `idclient`=?, `motdepasse` = ?, `role`=? WHERE `user`.`id` = ?";
                PreparedStatement state= conn.prepareStatement(requete);
                state.setString(1, user_nom);
                state.setString(2, user_prenom);
                state.setString(3, user_email);
                state.setString(4, user_idclient);
                state.setString(5, user_motdepasse);
                state.setString(6, user_role);
                state.setInt(7, user_id);
                int result=state.executeUpdate();
                JOptionPane.showMessageDialog(this, "Modification effectuer avec succes", "Modification reussi", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_user_btn_modifierMouseClicked

    private void user_btn_supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_btn_supprimerMouseClicked
        // TODO add your handling code here:
        int user_id = Integer.parseInt(user_id_field.getText());
        //COnnexion avec la base
        String urlBDD = "jdbc:mysql://localhost:3306/agencebd";
        String user = "root";
        String passwd = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(urlBDD, user, passwd);
            System.out.println("connexion reussi mec");
            String requete="DELETE FROM `user` WHERE `user`.`id` = ?;";
            PreparedStatement state= conn.prepareStatement(requete);
            state.setInt(1, user_id);
            int result=state.executeUpdate();
            JOptionPane.showMessageDialog(this, "Supprimer avec succes", "Supprimer reussi", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
        }
        Remplire_tableau();
    }//GEN-LAST:event_user_btn_supprimerMouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        // TODO add your handling code here:
        Reglage.main(null);
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        Remplire_tableau();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        Remplire_tableau();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        Remplire_tableau();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        Remplire_tableau();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        Remplire_tableau();
    }//GEN-LAST:event_jButton5MouseClicked

    private void contact_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contact_tableMouseClicked
        // TODO add your handling code here:
        Remplire_champ_contact();
        
    }//GEN-LAST:event_contact_tableMouseClicked

    private void tableau_clientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableau_clientMouseClicked
        // TODO add your handling code here:
        Remplire_champ_client();
    }//GEN-LAST:event_tableau_clientMouseClicked

    private void tableau_volMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableau_volMouseClicked
        // TODO add your handling code here:
        Remplire_champ_vol();
    }//GEN-LAST:event_tableau_volMouseClicked

    private void tableau_reservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableau_reservationMouseClicked
        // TODO add your handling code here:
        Remplire_champ_reservation();
    }//GEN-LAST:event_tableau_reservationMouseClicked

    private void tableau_userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableau_userMouseClicked
        // TODO add your handling code here:
        Remplire_champ_utilisateur();
    }//GEN-LAST:event_tableau_userMouseClicked

    private void contact_btn_rechercherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contact_btn_rechercherMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_contact_btn_rechercherMouseClicked

    private void contact_btn_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_btn_rechercherActionPerformed
        // TODO add your handling code here:
        String contact_id_rechercher=String.valueOf(contact_id_rechercher_spinner.getValue());
        for(int a=0;a<50;a++){
            if(contact_id_rechercher.equals(T1[a][0])){
                int index=0;
                contact_id_field.setText(T1[a][index++]);
                contact_tel_field.setText(T1[a][index++]);
                contact_email_field.setText(T1[a][index++]);
                contact_adresse_field.setText(T1[a][index++]);
                contact_table.setRowSelectionInterval(a, a);
                break;
            }
        }
        
    }//GEN-LAST:event_contact_btn_rechercherActionPerformed

    private void client_btn_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_btn_rechercherActionPerformed
        // TODO add your handling code here:
        String client_id_rechercher=String.valueOf(client_id_rechercher_spinner.getValue());
        for(int a=0;a<50;a++){
            if(client_id_rechercher.equals(T2[a][0])){
                int index=0;
                client_id_field.setText(T2[a][index++]);
                client_nom_field.setText(T2[a][index++]);
                client_prenom_field.setText(T2[a][index++]);
                client_genre_field.setSelectedItem(T2[a][index++]);
                client_passeport_field.setText(T2[a][index++]);
                client_idcontact_field.setText(T2[a][index++]);
                tableau_client.setRowSelectionInterval(a, a);
                break;
            }
        }
    }//GEN-LAST:event_client_btn_rechercherActionPerformed

    private void vol_btn_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vol_btn_rechercherActionPerformed
        // TODO add your handling code here:
        String vol_id_rechercher=String.valueOf(vol_id_rechercher_spinner.getValue());
        for(int a=0;a<50;a++){
            if(vol_id_rechercher.equals(T3[a][0])){
                int index=0;
                vol_id_field.setText(T3[a][0]);
                vol_numero_field.setText(T3[a][1]);  
                try{
                    String ladate= T3[a][2];        
                    ladate=ladate.substring(0,10);
                    Date ladatefinale= new SimpleDateFormat("yyyy-MM-dd").parse(ladate);
                    vol_datedepart_field.setDate(ladatefinale);
                }
                catch(ParseException e){
                    e.printStackTrace();
                }    
                try{
                    String ladate= T3[a][3];        
                    ladate=ladate.substring(0,10);
                    Date ladatefinale= new SimpleDateFormat("yyyy-MM-dd").parse(ladate);
                    vol_datearrivee_field.setDate(ladatefinale);
                }
                catch(ParseException e){
                    e.printStackTrace();
                }  
                vol_aeropdepart_field.setText(T3[a][4]);
                vol_aeroparrivee_field.setText(T3[a][5]);
                vol_nomcompagnie_field.setText(T3[a][6]);
                vol_nbrplace_field.setText(T3[a][7]);
                vol_terminal_field.setText(T3[a][8]);
                vol_prix_field.setText(T3[a][9]);
                tableau_vol.setRowSelectionInterval(a, a);
                break;
            }
        }
    }//GEN-LAST:event_vol_btn_rechercherActionPerformed

    private void reservation_btn_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservation_btn_rechercherActionPerformed
        // TODO add your handling code here:
        String reservation_id_rechercher=String.valueOf(reservation_id_rechercher_spinner.getValue());
        for(int a=0;a<50;a++){
            if(reservation_id_rechercher.equals(T4[a][0])){
                int index=0;
                reservation_id_field.setText(T4[a][index++]);
                reservation_numero_field.setText(T4[a][index++]);
                try{
                    String ladate= T4[a][index++];        
                    ladate=ladate.substring(0,10);
                    Date ladatefinale= new SimpleDateFormat("yyyy-MM-dd").parse(ladate);
                    reservation_date_field.setDate(ladatefinale);
                }
                catch(ParseException e){
                    e.printStackTrace();
                } 
                reservation_prix_field.setText(T4[a][index++]);
                reservation_statut_field.setText(T4[a][index++]);
                reservation_fraispenalite_field.setText(T4[a][index++]);
                reservation_numplace_field.setText(T4[a][index++]);
                reservation_idclient_field.setText(T4[a][index++]);
                reservation_idvol_field.setText(T4[a][index++]);
                tableau_reservation.setRowSelectionInterval(a, a);
                break;
            }
        }
    }//GEN-LAST:event_reservation_btn_rechercherActionPerformed

    private void utilisateur_btn_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilisateur_btn_rechercherActionPerformed
        // TODO add your handling code here:
        String utilisateur_id_rechercher=String.valueOf(utilisateur_id_rechercher_spinner.getValue());
        for(int a=0;a<50;a++){
            if(utilisateur_id_rechercher.equals(T5[a][0])){
                int index=0;
                user_id_field.setText(T5[a][index++]);
                user_nom_field.setText(T5[a][index++]);
                user_prenom_field.setText(T5[a][index++]);
                user_email_field.setText(T5[a][index++]);
                user_motdepasse_field.setText(T5[a][index++]);
                user_role_field.setSelectedItem(T5[a][index++]);
                user_idclient_field.setText(T5[a][index++]);
                tableau_user.setRowSelectionInterval(a, a);
                break;
            }
        }
    }//GEN-LAST:event_utilisateur_btn_rechercherActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Acceuil().setVisible(true);
            }
        });
    }
    
    /*Mes codes*/
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Client_zone;
    private javax.swing.JPanel Contact_zone;
    private javax.swing.JPanel Reservation_zone;
    private javax.swing.JPanel Utilisateur_zone;
    private javax.swing.JPanel Vol_zone;
    private javax.swing.JButton acceuil_btn_deconnexion;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton client_btn_ajouter;
    private javax.swing.JButton client_btn_modifier;
    private javax.swing.JButton client_btn_rechercher;
    private javax.swing.JButton client_btn_supprimer;
    private javax.swing.JComboBox<String> client_genre_field;
    private javax.swing.JTextField client_id_field;
    private javax.swing.JSpinner client_id_rechercher_spinner;
    private javax.swing.JTextField client_idcontact_field;
    private javax.swing.JTextField client_nom_field;
    private javax.swing.JTextField client_passeport_field;
    private javax.swing.JTextField client_prenom_field;
    private javax.swing.JTextField contact_adresse_field;
    private javax.swing.JButton contact_btn_ajouter;
    private javax.swing.JButton contact_btn_modifier;
    private javax.swing.JButton contact_btn_rechercher;
    private javax.swing.JButton contact_btn_supprimer;
    private javax.swing.JTextField contact_email_field;
    private javax.swing.JTextField contact_id_field;
    private javax.swing.JSpinner contact_id_rechercher_spinner;
    private javax.swing.JTable contact_table;
    private javax.swing.JTextField contact_tel_field;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel nom;
    private javax.swing.JLabel nom1;
    private javax.swing.JLabel nom2;
    private javax.swing.JButton reservation_btn_ajouter;
    private javax.swing.JButton reservation_btn_modifier;
    private javax.swing.JButton reservation_btn_rechercher;
    private javax.swing.JButton reservation_btn_supprimer;
    private com.toedter.calendar.JDateChooser reservation_date_field;
    private javax.swing.JTextField reservation_fraispenalite_field;
    private javax.swing.JTextField reservation_id_field;
    private javax.swing.JSpinner reservation_id_rechercher_spinner;
    private javax.swing.JTextField reservation_idclient_field;
    private javax.swing.JTextField reservation_idvol_field;
    private javax.swing.JTextField reservation_numero_field;
    private javax.swing.JTextField reservation_numplace_field;
    private javax.swing.JTextField reservation_prix_field;
    private javax.swing.JTextField reservation_statut_field;
    private javax.swing.JTable tableau_client;
    private javax.swing.JTable tableau_reservation;
    private javax.swing.JTable tableau_user;
    private javax.swing.JTable tableau_vol;
    private javax.swing.JButton user_btn_ajouter;
    private javax.swing.JButton user_btn_modifier;
    private javax.swing.JButton user_btn_supprimer;
    private javax.swing.JTextField user_email_field;
    private javax.swing.JTextField user_id_field;
    private javax.swing.JTextField user_idclient_field;
    private javax.swing.JPasswordField user_motdepasse_field;
    private javax.swing.JTextField user_nom_field;
    private javax.swing.JTextField user_prenom_field;
    private javax.swing.JComboBox<String> user_role_field;
    private javax.swing.JButton utilisateur_btn_rechercher;
    private javax.swing.JSpinner utilisateur_id_rechercher_spinner;
    private javax.swing.JTextField vol_aeroparrivee_field;
    private javax.swing.JTextField vol_aeropdepart_field;
    private javax.swing.JButton vol_btn_ajouter;
    private javax.swing.JButton vol_btn_modifier;
    private javax.swing.JButton vol_btn_rechercher;
    private javax.swing.JButton vol_btn_supprimer;
    private com.toedter.calendar.JDateChooser vol_datearrivee_field;
    private com.toedter.calendar.JDateChooser vol_datedepart_field;
    private javax.swing.JTextField vol_id_field;
    private javax.swing.JSpinner vol_id_rechercher_spinner;
    private javax.swing.JTextField vol_nbrplace_field;
    private javax.swing.JTextField vol_nomcompagnie_field;
    private javax.swing.JTextField vol_numero_field;
    private javax.swing.JTextField vol_prix_field;
    private javax.swing.JTextField vol_terminal_field;
    // End of variables declaration//GEN-END:variables
}
